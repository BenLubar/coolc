
state 0
	$accept: .program $end 
	classes: .    (2)

	.  reduce 2 (src line 72)

	classes  goto 2
	program  goto 1

state 1
	$accept:  program.$end 

	$end  accept
	.  error


state 2
	program:  classes.    (1)
	classes:  classes.class 

	CLASS  shift 4
	.  reduce 1 (src line 64)

	class  goto 3

state 3
	classes:  classes class.    (3)

	.  reduce 3 (src line 77)


state 4
	class:  CLASS.TYPEID '(' var_formals ')' extends '{' feature_list '}' 

	TYPEID  shift 5
	.  error


state 5
	class:  CLASS TYPEID.'(' var_formals ')' extends '{' feature_list '}' 

	'('  shift 6
	.  error


state 6
	class:  CLASS TYPEID '('.var_formals ')' extends '{' feature_list '}' 
	var_formals: .    (27)

	VAR  shift 10
	.  reduce 27 (src line 263)

	var_formals  goto 7
	var_formals_nonempty  goto 8
	var_formal  goto 9

state 7
	class:  CLASS TYPEID '(' var_formals.')' extends '{' feature_list '}' 

	')'  shift 11
	.  error


state 8
	var_formals:  var_formals_nonempty.    (28)
	var_formals_nonempty:  var_formals_nonempty.',' var_formal 

	','  shift 12
	.  reduce 28 (src line 268)


state 9
	var_formals_nonempty:  var_formal.    (29)

	.  reduce 29 (src line 274)


state 10
	var_formal:  VAR.formal 

	OBJECTID  shift 14
	.  error

	formal  goto 13

state 11
	class:  CLASS TYPEID '(' var_formals ')'.extends '{' feature_list '}' 
	extends: .    (5)

	EXTENDS  shift 16
	.  reduce 5 (src line 95)

	extends  goto 15

state 12
	var_formals_nonempty:  var_formals_nonempty ','.var_formal 

	VAR  shift 10
	.  error

	var_formal  goto 17

state 13
	var_formal:  VAR formal.    (31)

	.  reduce 31 (src line 285)


state 14
	formal:  OBJECTID.':' TYPEID 

	':'  shift 18
	.  error


state 15
	class:  CLASS TYPEID '(' var_formals ')' extends.'{' feature_list '}' 

	'{'  shift 19
	.  error


state 16
	extends:  EXTENDS.TYPEID '(' actuals ')' 
	extends:  EXTENDS.NATIVE 

	NATIVE  shift 21
	TYPEID  shift 20
	.  error


state 17
	var_formals_nonempty:  var_formals_nonempty ',' var_formal.    (30)

	.  reduce 30 (src line 279)


state 18
	formal:  OBJECTID ':'.TYPEID 

	TYPEID  shift 22
	.  error


state 19
	class:  CLASS TYPEID '(' var_formals ')' extends '{'.feature_list '}' 
	feature_list: .    (8)

	.  reduce 8 (src line 125)

	feature_list  goto 23

state 20
	extends:  EXTENDS TYPEID.'(' actuals ')' 

	'('  shift 24
	.  error


state 21
	extends:  EXTENDS NATIVE.    (7)

	.  reduce 7 (src line 113)


state 22
	formal:  OBJECTID ':' TYPEID.    (36)

	.  reduce 36 (src line 314)


state 23
	class:  CLASS TYPEID '(' var_formals ')' extends '{' feature_list.'}' 
	feature_list:  feature_list.feature ';' 

	VAR  shift 31
	DEF  shift 32
	OVERRIDE  shift 30
	'{'  shift 27
	'}'  shift 25
	.  error

	feature  goto 26
	var  goto 28
	method  goto 29

state 24
	extends:  EXTENDS TYPEID '('.actuals ')' 
	actuals: .    (18)

	SUPER  shift 42
	NEW  shift 43
	NULL  shift 46
	THIS  shift 50
	TRUE  shift 51
	FALSE  shift 52
	'('  shift 45
	OBJECTID  shift 37
	INTEGER  shift 47
	STRING  shift 48
	IF  shift 40
	WHILE  shift 41
	'-'  shift 39
	'!'  shift 38
	'{'  shift 44
	.  reduce 18 (src line 205)

	expr  goto 35
	primary  goto 36
	actuals  goto 33
	actuals_nonempty  goto 34
	boolean  goto 49

state 25
	class:  CLASS TYPEID '(' var_formals ')' extends '{' feature_list '}'.    (4)

	.  reduce 4 (src line 83)


state 26
	feature_list:  feature_list feature.';' 

	';'  shift 53
	.  error


state 27
	feature:  '{'.block '}' 
	block: .    (22)

	VAR  shift 57
	SUPER  shift 42
	NEW  shift 43
	NULL  shift 46
	THIS  shift 50
	TRUE  shift 51
	FALSE  shift 52
	'('  shift 45
	OBJECTID  shift 37
	INTEGER  shift 47
	STRING  shift 48
	IF  shift 40
	WHILE  shift 41
	'-'  shift 39
	'!'  shift 38
	'{'  shift 44
	.  reduce 22 (src line 227)

	block  goto 54
	block_nonempty  goto 55
	expr  goto 56
	primary  goto 36
	boolean  goto 49

state 28
	feature:  var.    (11)

	.  reduce 11 (src line 143)


state 29
	feature:  method.    (12)

	.  reduce 12 (src line 147)


state 30
	feature:  OVERRIDE.method 

	DEF  shift 32
	.  error

	method  goto 58

state 31
	var:  VAR.OBJECTID ':' TYPEID '=' expr 
	var:  VAR.OBJECTID '=' NATIVE 

	OBJECTID  shift 59
	.  error


state 32
	method:  DEF.OBJECTID '(' formals ')' ':' TYPEID '=' expr 
	method:  DEF.OBJECTID '(' formals ')' ':' TYPEID '=' NATIVE 

	OBJECTID  shift 60
	.  error


state 33
	extends:  EXTENDS TYPEID '(' actuals.')' 

	')'  shift 61
	.  error


state 34
	actuals:  actuals_nonempty.    (19)
	actuals_nonempty:  actuals_nonempty.',' expr 

	','  shift 62
	.  reduce 19 (src line 210)


state 35
	actuals_nonempty:  expr.    (20)
	expr:  expr.LE expr 
	expr:  expr.'<' expr 
	expr:  expr.EQ expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.MATCH '{' cases '}' 
	expr:  expr.'.' OBJECTID '(' actuals ')' 

	MATCH  shift 70
	LE  shift 63
	'<'  shift 64
	EQ  shift 65
	'+'  shift 68
	'-'  shift 69
	'*'  shift 66
	'/'  shift 67
	'.'  shift 71
	.  reduce 20 (src line 216)


state 36
	expr:  primary.    (37)

	.  reduce 37 (src line 324)


state 37
	expr:  OBJECTID.'=' expr 
	primary:  OBJECTID.'(' actuals ')' 
	primary:  OBJECTID.    (59)

	'('  shift 73
	'='  shift 72
	.  reduce 59 (src line 497)


state 38
	expr:  '!'.expr 

	SUPER  shift 42
	NEW  shift 43
	NULL  shift 46
	THIS  shift 50
	TRUE  shift 51
	FALSE  shift 52
	'('  shift 45
	OBJECTID  shift 37
	INTEGER  shift 47
	STRING  shift 48
	IF  shift 40
	WHILE  shift 41
	'-'  shift 39
	'!'  shift 38
	'{'  shift 44
	.  error

	expr  goto 74
	primary  goto 36
	boolean  goto 49

state 39
	expr:  '-'.expr 

	SUPER  shift 42
	NEW  shift 43
	NULL  shift 46
	THIS  shift 50
	TRUE  shift 51
	FALSE  shift 52
	'('  shift 45
	OBJECTID  shift 37
	INTEGER  shift 47
	STRING  shift 48
	IF  shift 40
	WHILE  shift 41
	'-'  shift 39
	'!'  shift 38
	'{'  shift 44
	.  error

	expr  goto 75
	primary  goto 36
	boolean  goto 49

state 40
	expr:  IF.'(' expr ')' expr ELSE expr 

	'('  shift 76
	.  error


state 41
	expr:  WHILE.'(' expr ')' expr 

	'('  shift 77
	.  error


state 42
	primary:  SUPER.'.' OBJECTID '(' actuals ')' 

	'.'  shift 78
	.  error


state 43
	primary:  NEW.TYPEID '(' actuals ')' 

	TYPEID  shift 79
	.  error


state 44
	primary:  '{'.block '}' 
	block: .    (22)

	VAR  shift 57
	SUPER  shift 42
	NEW  shift 43
	NULL  shift 46
	THIS  shift 50
	TRUE  shift 51
	FALSE  shift 52
	'('  shift 45
	OBJECTID  shift 37
	INTEGER  shift 47
	STRING  shift 48
	IF  shift 40
	WHILE  shift 41
	'-'  shift 39
	'!'  shift 38
	'{'  shift 44
	.  reduce 22 (src line 227)

	block  goto 80
	block_nonempty  goto 55
	expr  goto 56
	primary  goto 36
	boolean  goto 49

state 45
	primary:  '('.expr ')' 
	primary:  '('.')' 

	SUPER  shift 42
	NEW  shift 43
	NULL  shift 46
	THIS  shift 50
	TRUE  shift 51
	FALSE  shift 52
	'('  shift 45
	OBJECTID  shift 37
	INTEGER  shift 47
	STRING  shift 48
	IF  shift 40
	WHILE  shift 41
	'-'  shift 39
	'!'  shift 38
	')'  shift 82
	'{'  shift 44
	.  error

	expr  goto 81
	primary  goto 36
	boolean  goto 49

state 46
	primary:  NULL.    (57)

	.  reduce 57 (src line 485)


state 47
	primary:  INTEGER.    (60)

	.  reduce 60 (src line 503)


state 48
	primary:  STRING.    (61)

	.  reduce 61 (src line 509)


state 49
	primary:  boolean.    (62)

	.  reduce 62 (src line 515)


state 50
	primary:  THIS.    (63)

	.  reduce 63 (src line 521)


state 51
	boolean:  TRUE.    (64)

	.  reduce 64 (src line 529)


state 52
	boolean:  FALSE.    (65)

	.  reduce 65 (src line 537)


state 53
	feature_list:  feature_list feature ';'.    (9)

	.  reduce 9 (src line 130)


state 54
	feature:  '{' block.'}' 

	'}'  shift 83
	.  error


state 55
	block:  block_nonempty.    (23)

	.  reduce 23 (src line 234)


state 56
	block_nonempty:  expr.    (24)
	block_nonempty:  expr.';' block_nonempty 
	expr:  expr.LE expr 
	expr:  expr.'<' expr 
	expr:  expr.EQ expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.MATCH '{' cases '}' 
	expr:  expr.'.' OBJECTID '(' actuals ')' 

	MATCH  shift 70
	LE  shift 63
	'<'  shift 64
	EQ  shift 65
	'+'  shift 68
	'-'  shift 69
	'*'  shift 66
	'/'  shift 67
	'.'  shift 71
	';'  shift 84
	.  reduce 24 (src line 240)


state 57
	block_nonempty:  VAR.OBJECTID ':' TYPEID '=' expr ';' block_nonempty 

	OBJECTID  shift 85
	.  error


state 58
	feature:  OVERRIDE method.    (13)

	.  reduce 13 (src line 151)


state 59
	var:  VAR OBJECTID.':' TYPEID '=' expr 
	var:  VAR OBJECTID.'=' NATIVE 

	'='  shift 87
	':'  shift 86
	.  error


state 60
	method:  DEF OBJECTID.'(' formals ')' ':' TYPEID '=' expr 
	method:  DEF OBJECTID.'(' formals ')' ':' TYPEID '=' NATIVE 

	'('  shift 88
	.  error


state 61
	extends:  EXTENDS TYPEID '(' actuals ')'.    (6)

	.  reduce 6 (src line 106)


state 62
	actuals_nonempty:  actuals_nonempty ','.expr 

	SUPER  shift 42
	NEW  shift 43
	NULL  shift 46
	THIS  shift 50
	TRUE  shift 51
	FALSE  shift 52
	'('  shift 45
	OBJECTID  shift 37
	INTEGER  shift 47
	STRING  shift 48
	IF  shift 40
	WHILE  shift 41
	'-'  shift 39
	'!'  shift 38
	'{'  shift 44
	.  error

	expr  goto 89
	primary  goto 36
	boolean  goto 49

state 63
	expr:  expr LE.expr 

	SUPER  shift 42
	NEW  shift 43
	NULL  shift 46
	THIS  shift 50
	TRUE  shift 51
	FALSE  shift 52
	'('  shift 45
	OBJECTID  shift 37
	INTEGER  shift 47
	STRING  shift 48
	IF  shift 40
	WHILE  shift 41
	'-'  shift 39
	'!'  shift 38
	'{'  shift 44
	.  error

	expr  goto 90
	primary  goto 36
	boolean  goto 49

state 64
	expr:  expr '<'.expr 

	SUPER  shift 42
	NEW  shift 43
	NULL  shift 46
	THIS  shift 50
	TRUE  shift 51
	FALSE  shift 52
	'('  shift 45
	OBJECTID  shift 37
	INTEGER  shift 47
	STRING  shift 48
	IF  shift 40
	WHILE  shift 41
	'-'  shift 39
	'!'  shift 38
	'{'  shift 44
	.  error

	expr  goto 91
	primary  goto 36
	boolean  goto 49

state 65
	expr:  expr EQ.expr 

	SUPER  shift 42
	NEW  shift 43
	NULL  shift 46
	THIS  shift 50
	TRUE  shift 51
	FALSE  shift 52
	'('  shift 45
	OBJECTID  shift 37
	INTEGER  shift 47
	STRING  shift 48
	IF  shift 40
	WHILE  shift 41
	'-'  shift 39
	'!'  shift 38
	'{'  shift 44
	.  error

	expr  goto 92
	primary  goto 36
	boolean  goto 49

state 66
	expr:  expr '*'.expr 

	SUPER  shift 42
	NEW  shift 43
	NULL  shift 46
	THIS  shift 50
	TRUE  shift 51
	FALSE  shift 52
	'('  shift 45
	OBJECTID  shift 37
	INTEGER  shift 47
	STRING  shift 48
	IF  shift 40
	WHILE  shift 41
	'-'  shift 39
	'!'  shift 38
	'{'  shift 44
	.  error

	expr  goto 93
	primary  goto 36
	boolean  goto 49

state 67
	expr:  expr '/'.expr 

	SUPER  shift 42
	NEW  shift 43
	NULL  shift 46
	THIS  shift 50
	TRUE  shift 51
	FALSE  shift 52
	'('  shift 45
	OBJECTID  shift 37
	INTEGER  shift 47
	STRING  shift 48
	IF  shift 40
	WHILE  shift 41
	'-'  shift 39
	'!'  shift 38
	'{'  shift 44
	.  error

	expr  goto 94
	primary  goto 36
	boolean  goto 49

state 68
	expr:  expr '+'.expr 

	SUPER  shift 42
	NEW  shift 43
	NULL  shift 46
	THIS  shift 50
	TRUE  shift 51
	FALSE  shift 52
	'('  shift 45
	OBJECTID  shift 37
	INTEGER  shift 47
	STRING  shift 48
	IF  shift 40
	WHILE  shift 41
	'-'  shift 39
	'!'  shift 38
	'{'  shift 44
	.  error

	expr  goto 95
	primary  goto 36
	boolean  goto 49

state 69
	expr:  expr '-'.expr 

	SUPER  shift 42
	NEW  shift 43
	NULL  shift 46
	THIS  shift 50
	TRUE  shift 51
	FALSE  shift 52
	'('  shift 45
	OBJECTID  shift 37
	INTEGER  shift 47
	STRING  shift 48
	IF  shift 40
	WHILE  shift 41
	'-'  shift 39
	'!'  shift 38
	'{'  shift 44
	.  error

	expr  goto 96
	primary  goto 36
	boolean  goto 49

state 70
	expr:  expr MATCH.'{' cases '}' 

	'{'  shift 97
	.  error


state 71
	expr:  expr '.'.OBJECTID '(' actuals ')' 

	OBJECTID  shift 98
	.  error


state 72
	expr:  OBJECTID '='.expr 

	SUPER  shift 42
	NEW  shift 43
	NULL  shift 46
	THIS  shift 50
	TRUE  shift 51
	FALSE  shift 52
	'('  shift 45
	OBJECTID  shift 37
	INTEGER  shift 47
	STRING  shift 48
	IF  shift 40
	WHILE  shift 41
	'-'  shift 39
	'!'  shift 38
	'{'  shift 44
	.  error

	expr  goto 99
	primary  goto 36
	boolean  goto 49

state 73
	primary:  OBJECTID '('.actuals ')' 
	actuals: .    (18)

	SUPER  shift 42
	NEW  shift 43
	NULL  shift 46
	THIS  shift 50
	TRUE  shift 51
	FALSE  shift 52
	'('  shift 45
	OBJECTID  shift 37
	INTEGER  shift 47
	STRING  shift 48
	IF  shift 40
	WHILE  shift 41
	'-'  shift 39
	'!'  shift 38
	'{'  shift 44
	.  reduce 18 (src line 205)

	expr  goto 35
	primary  goto 36
	actuals  goto 100
	actuals_nonempty  goto 34
	boolean  goto 49

state 74
	expr:  '!' expr.    (39)
	expr:  expr.LE expr 
	expr:  expr.'<' expr 
	expr:  expr.EQ expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.MATCH '{' cases '}' 
	expr:  expr.'.' OBJECTID '(' actuals ')' 

	'.'  shift 71
	.  reduce 39 (src line 336)


state 75
	expr:  '-' expr.    (40)
	expr:  expr.LE expr 
	expr:  expr.'<' expr 
	expr:  expr.EQ expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.MATCH '{' cases '}' 
	expr:  expr.'.' OBJECTID '(' actuals ')' 

	'.'  shift 71
	.  reduce 40 (src line 342)


state 76
	expr:  IF '('.expr ')' expr ELSE expr 

	SUPER  shift 42
	NEW  shift 43
	NULL  shift 46
	THIS  shift 50
	TRUE  shift 51
	FALSE  shift 52
	'('  shift 45
	OBJECTID  shift 37
	INTEGER  shift 47
	STRING  shift 48
	IF  shift 40
	WHILE  shift 41
	'-'  shift 39
	'!'  shift 38
	'{'  shift 44
	.  error

	expr  goto 101
	primary  goto 36
	boolean  goto 49

state 77
	expr:  WHILE '('.expr ')' expr 

	SUPER  shift 42
	NEW  shift 43
	NULL  shift 46
	THIS  shift 50
	TRUE  shift 51
	FALSE  shift 52
	'('  shift 45
	OBJECTID  shift 37
	INTEGER  shift 47
	STRING  shift 48
	IF  shift 40
	WHILE  shift 41
	'-'  shift 39
	'!'  shift 38
	'{'  shift 44
	.  error

	expr  goto 102
	primary  goto 36
	boolean  goto 49

state 78
	primary:  SUPER '.'.OBJECTID '(' actuals ')' 

	OBJECTID  shift 103
	.  error


state 79
	primary:  NEW TYPEID.'(' actuals ')' 

	'('  shift 104
	.  error


state 80
	primary:  '{' block.'}' 

	'}'  shift 105
	.  error


state 81
	expr:  expr.LE expr 
	expr:  expr.'<' expr 
	expr:  expr.EQ expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.MATCH '{' cases '}' 
	expr:  expr.'.' OBJECTID '(' actuals ')' 
	primary:  '(' expr.')' 

	MATCH  shift 70
	LE  shift 63
	'<'  shift 64
	EQ  shift 65
	'+'  shift 68
	'-'  shift 69
	'*'  shift 66
	'/'  shift 67
	'.'  shift 71
	')'  shift 106
	.  error


state 82
	primary:  '(' ')'.    (58)

	.  reduce 58 (src line 491)


state 83
	feature:  '{' block '}'.    (10)

	.  reduce 10 (src line 136)


state 84
	block_nonempty:  expr ';'.block_nonempty 

	VAR  shift 57
	SUPER  shift 42
	NEW  shift 43
	NULL  shift 46
	THIS  shift 50
	TRUE  shift 51
	FALSE  shift 52
	'('  shift 45
	OBJECTID  shift 37
	INTEGER  shift 47
	STRING  shift 48
	IF  shift 40
	WHILE  shift 41
	'-'  shift 39
	'!'  shift 38
	'{'  shift 44
	.  error

	block_nonempty  goto 107
	expr  goto 56
	primary  goto 36
	boolean  goto 49

state 85
	block_nonempty:  VAR OBJECTID.':' TYPEID '=' expr ';' block_nonempty 

	':'  shift 108
	.  error


state 86
	var:  VAR OBJECTID ':'.TYPEID '=' expr 

	TYPEID  shift 109
	.  error


state 87
	var:  VAR OBJECTID '='.NATIVE 

	NATIVE  shift 110
	.  error


state 88
	method:  DEF OBJECTID '('.formals ')' ':' TYPEID '=' expr 
	method:  DEF OBJECTID '('.formals ')' ':' TYPEID '=' NATIVE 
	formals: .    (32)

	OBJECTID  shift 14
	.  reduce 32 (src line 292)

	formals  goto 111
	formals_nonempty  goto 112
	formal  goto 113

state 89
	actuals_nonempty:  actuals_nonempty ',' expr.    (21)
	expr:  expr.LE expr 
	expr:  expr.'<' expr 
	expr:  expr.EQ expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.MATCH '{' cases '}' 
	expr:  expr.'.' OBJECTID '(' actuals ')' 

	MATCH  shift 70
	LE  shift 63
	'<'  shift 64
	EQ  shift 65
	'+'  shift 68
	'-'  shift 69
	'*'  shift 66
	'/'  shift 67
	'.'  shift 71
	.  reduce 21 (src line 221)


state 90
	expr:  expr.LE expr 
	expr:  expr LE expr.    (43)
	expr:  expr.'<' expr 
	expr:  expr.EQ expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.MATCH '{' cases '}' 
	expr:  expr.'.' OBJECTID '(' actuals ')' 

	EQ  shift 65
	'+'  shift 68
	'-'  shift 69
	'*'  shift 66
	'/'  shift 67
	'.'  shift 71
	.  reduce 43 (src line 363)


state 91
	expr:  expr.LE expr 
	expr:  expr.'<' expr 
	expr:  expr '<' expr.    (44)
	expr:  expr.EQ expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.MATCH '{' cases '}' 
	expr:  expr.'.' OBJECTID '(' actuals ')' 

	EQ  shift 65
	'+'  shift 68
	'-'  shift 69
	'*'  shift 66
	'/'  shift 67
	'.'  shift 71
	.  reduce 44 (src line 371)


state 92
	expr:  expr.LE expr 
	expr:  expr.'<' expr 
	expr:  expr.EQ expr 
	expr:  expr EQ expr.    (45)
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.MATCH '{' cases '}' 
	expr:  expr.'.' OBJECTID '(' actuals ')' 

	'+'  shift 68
	'-'  shift 69
	'*'  shift 66
	'/'  shift 67
	'.'  shift 71
	.  reduce 45 (src line 379)


state 93
	expr:  expr.LE expr 
	expr:  expr.'<' expr 
	expr:  expr.EQ expr 
	expr:  expr.'*' expr 
	expr:  expr '*' expr.    (46)
	expr:  expr.'/' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.MATCH '{' cases '}' 
	expr:  expr.'.' OBJECTID '(' actuals ')' 

	'.'  shift 71
	.  reduce 46 (src line 392)


state 94
	expr:  expr.LE expr 
	expr:  expr.'<' expr 
	expr:  expr.EQ expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr '/' expr.    (47)
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.MATCH '{' cases '}' 
	expr:  expr.'.' OBJECTID '(' actuals ')' 

	'.'  shift 71
	.  reduce 47 (src line 400)


state 95
	expr:  expr.LE expr 
	expr:  expr.'<' expr 
	expr:  expr.EQ expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'+' expr 
	expr:  expr '+' expr.    (48)
	expr:  expr.'-' expr 
	expr:  expr.MATCH '{' cases '}' 
	expr:  expr.'.' OBJECTID '(' actuals ')' 

	'*'  shift 66
	'/'  shift 67
	'.'  shift 71
	.  reduce 48 (src line 408)


state 96
	expr:  expr.LE expr 
	expr:  expr.'<' expr 
	expr:  expr.EQ expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr '-' expr.    (49)
	expr:  expr.MATCH '{' cases '}' 
	expr:  expr.'.' OBJECTID '(' actuals ')' 

	'*'  shift 66
	'/'  shift 67
	'.'  shift 71
	.  reduce 49 (src line 416)


state 97
	expr:  expr MATCH '{'.cases '}' 

	CASE  shift 116
	.  error

	cases  goto 114
	case  goto 115

state 98
	expr:  expr '.' OBJECTID.'(' actuals ')' 

	'('  shift 117
	.  error


state 99
	expr:  OBJECTID '=' expr.    (38)
	expr:  expr.LE expr 
	expr:  expr.'<' expr 
	expr:  expr.EQ expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.MATCH '{' cases '}' 
	expr:  expr.'.' OBJECTID '(' actuals ')' 

	MATCH  shift 70
	LE  shift 63
	'<'  shift 64
	EQ  shift 65
	'+'  shift 68
	'-'  shift 69
	'*'  shift 66
	'/'  shift 67
	'.'  shift 71
	.  reduce 38 (src line 329)


state 100
	primary:  OBJECTID '(' actuals.')' 

	')'  shift 118
	.  error


state 101
	expr:  IF '(' expr.')' expr ELSE expr 
	expr:  expr.LE expr 
	expr:  expr.'<' expr 
	expr:  expr.EQ expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.MATCH '{' cases '}' 
	expr:  expr.'.' OBJECTID '(' actuals ')' 

	MATCH  shift 70
	LE  shift 63
	'<'  shift 64
	EQ  shift 65
	'+'  shift 68
	'-'  shift 69
	'*'  shift 66
	'/'  shift 67
	'.'  shift 71
	')'  shift 119
	.  error


state 102
	expr:  WHILE '(' expr.')' expr 
	expr:  expr.LE expr 
	expr:  expr.'<' expr 
	expr:  expr.EQ expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.MATCH '{' cases '}' 
	expr:  expr.'.' OBJECTID '(' actuals ')' 

	MATCH  shift 70
	LE  shift 63
	'<'  shift 64
	EQ  shift 65
	'+'  shift 68
	'-'  shift 69
	'*'  shift 66
	'/'  shift 67
	'.'  shift 71
	')'  shift 120
	.  error


state 103
	primary:  SUPER '.' OBJECTID.'(' actuals ')' 

	'('  shift 121
	.  error


state 104
	primary:  NEW TYPEID '('.actuals ')' 
	actuals: .    (18)

	SUPER  shift 42
	NEW  shift 43
	NULL  shift 46
	THIS  shift 50
	TRUE  shift 51
	FALSE  shift 52
	'('  shift 45
	OBJECTID  shift 37
	INTEGER  shift 47
	STRING  shift 48
	IF  shift 40
	WHILE  shift 41
	'-'  shift 39
	'!'  shift 38
	'{'  shift 44
	.  reduce 18 (src line 205)

	expr  goto 35
	primary  goto 36
	actuals  goto 122
	actuals_nonempty  goto 34
	boolean  goto 49

state 105
	primary:  '{' block '}'.    (55)

	.  reduce 55 (src line 477)


state 106
	primary:  '(' expr ')'.    (56)

	.  reduce 56 (src line 481)


state 107
	block_nonempty:  expr ';' block_nonempty.    (26)

	.  reduce 26 (src line 254)


state 108
	block_nonempty:  VAR OBJECTID ':'.TYPEID '=' expr ';' block_nonempty 

	TYPEID  shift 123
	.  error


state 109
	var:  VAR OBJECTID ':' TYPEID.'=' expr 

	'='  shift 124
	.  error


state 110
	var:  VAR OBJECTID '=' NATIVE.    (15)

	.  reduce 15 (src line 167)


state 111
	method:  DEF OBJECTID '(' formals.')' ':' TYPEID '=' expr 
	method:  DEF OBJECTID '(' formals.')' ':' TYPEID '=' NATIVE 

	')'  shift 125
	.  error


state 112
	formals:  formals_nonempty.    (33)
	formals_nonempty:  formals_nonempty.',' formal 

	','  shift 126
	.  reduce 33 (src line 297)


state 113
	formals_nonempty:  formal.    (34)

	.  reduce 34 (src line 303)


state 114
	expr:  expr MATCH '{' cases.'}' 
	cases:  cases.case 

	CASE  shift 116
	'}'  shift 127
	.  error

	case  goto 128

state 115
	cases:  case.    (66)

	.  reduce 66 (src line 546)


state 116
	case:  CASE.OBJECTID ':' TYPEID ARROW block 
	case:  CASE.NULL ARROW block 

	NULL  shift 130
	OBJECTID  shift 129
	.  error


state 117
	expr:  expr '.' OBJECTID '('.actuals ')' 
	actuals: .    (18)

	SUPER  shift 42
	NEW  shift 43
	NULL  shift 46
	THIS  shift 50
	TRUE  shift 51
	FALSE  shift 52
	'('  shift 45
	OBJECTID  shift 37
	INTEGER  shift 47
	STRING  shift 48
	IF  shift 40
	WHILE  shift 41
	'-'  shift 39
	'!'  shift 38
	'{'  shift 44
	.  reduce 18 (src line 205)

	expr  goto 35
	primary  goto 36
	actuals  goto 131
	actuals_nonempty  goto 34
	boolean  goto 49

state 118
	primary:  OBJECTID '(' actuals ')'.    (52)

	.  reduce 52 (src line 442)


state 119
	expr:  IF '(' expr ')'.expr ELSE expr 

	SUPER  shift 42
	NEW  shift 43
	NULL  shift 46
	THIS  shift 50
	TRUE  shift 51
	FALSE  shift 52
	'('  shift 45
	OBJECTID  shift 37
	INTEGER  shift 47
	STRING  shift 48
	IF  shift 40
	WHILE  shift 41
	'-'  shift 39
	'!'  shift 38
	'{'  shift 44
	.  error

	expr  goto 132
	primary  goto 36
	boolean  goto 49

state 120
	expr:  WHILE '(' expr ')'.expr 

	SUPER  shift 42
	NEW  shift 43
	NULL  shift 46
	THIS  shift 50
	TRUE  shift 51
	FALSE  shift 52
	'('  shift 45
	OBJECTID  shift 37
	INTEGER  shift 47
	STRING  shift 48
	IF  shift 40
	WHILE  shift 41
	'-'  shift 39
	'!'  shift 38
	'{'  shift 44
	.  error

	expr  goto 133
	primary  goto 36
	boolean  goto 49

state 121
	primary:  SUPER '.' OBJECTID '('.actuals ')' 
	actuals: .    (18)

	SUPER  shift 42
	NEW  shift 43
	NULL  shift 46
	THIS  shift 50
	TRUE  shift 51
	FALSE  shift 52
	'('  shift 45
	OBJECTID  shift 37
	INTEGER  shift 47
	STRING  shift 48
	IF  shift 40
	WHILE  shift 41
	'-'  shift 39
	'!'  shift 38
	'{'  shift 44
	.  reduce 18 (src line 205)

	expr  goto 35
	primary  goto 36
	actuals  goto 134
	actuals_nonempty  goto 34
	boolean  goto 49

state 122
	primary:  NEW TYPEID '(' actuals.')' 

	')'  shift 135
	.  error


state 123
	block_nonempty:  VAR OBJECTID ':' TYPEID.'=' expr ';' block_nonempty 

	'='  shift 136
	.  error


state 124
	var:  VAR OBJECTID ':' TYPEID '='.expr 

	SUPER  shift 42
	NEW  shift 43
	NULL  shift 46
	THIS  shift 50
	TRUE  shift 51
	FALSE  shift 52
	'('  shift 45
	OBJECTID  shift 37
	INTEGER  shift 47
	STRING  shift 48
	IF  shift 40
	WHILE  shift 41
	'-'  shift 39
	'!'  shift 38
	'{'  shift 44
	.  error

	expr  goto 137
	primary  goto 36
	boolean  goto 49

state 125
	method:  DEF OBJECTID '(' formals ')'.':' TYPEID '=' expr 
	method:  DEF OBJECTID '(' formals ')'.':' TYPEID '=' NATIVE 

	':'  shift 138
	.  error


state 126
	formals_nonempty:  formals_nonempty ','.formal 

	OBJECTID  shift 14
	.  error

	formal  goto 139

state 127
	expr:  expr MATCH '{' cases '}'.    (50)

	.  reduce 50 (src line 424)


state 128
	cases:  cases case.    (67)

	.  reduce 67 (src line 551)


state 129
	case:  CASE OBJECTID.':' TYPEID ARROW block 

	':'  shift 140
	.  error


state 130
	case:  CASE NULL.ARROW block 

	ARROW  shift 141
	.  error


state 131
	expr:  expr '.' OBJECTID '(' actuals.')' 

	')'  shift 142
	.  error


state 132
	expr:  IF '(' expr ')' expr.ELSE expr 
	expr:  expr.LE expr 
	expr:  expr.'<' expr 
	expr:  expr.EQ expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.MATCH '{' cases '}' 
	expr:  expr.'.' OBJECTID '(' actuals ')' 

	ELSE  shift 143
	MATCH  shift 70
	LE  shift 63
	'<'  shift 64
	EQ  shift 65
	'+'  shift 68
	'-'  shift 69
	'*'  shift 66
	'/'  shift 67
	'.'  shift 71
	.  error


state 133
	expr:  WHILE '(' expr ')' expr.    (42)
	expr:  expr.LE expr 
	expr:  expr.'<' expr 
	expr:  expr.EQ expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.MATCH '{' cases '}' 
	expr:  expr.'.' OBJECTID '(' actuals ')' 

	MATCH  shift 70
	LE  shift 63
	'<'  shift 64
	EQ  shift 65
	'+'  shift 68
	'-'  shift 69
	'*'  shift 66
	'/'  shift 67
	'.'  shift 71
	.  reduce 42 (src line 356)


state 134
	primary:  SUPER '.' OBJECTID '(' actuals.')' 

	')'  shift 144
	.  error


state 135
	primary:  NEW TYPEID '(' actuals ')'.    (54)

	.  reduce 54 (src line 461)


state 136
	block_nonempty:  VAR OBJECTID ':' TYPEID '='.expr ';' block_nonempty 

	SUPER  shift 42
	NEW  shift 43
	NULL  shift 46
	THIS  shift 50
	TRUE  shift 51
	FALSE  shift 52
	'('  shift 45
	OBJECTID  shift 37
	INTEGER  shift 47
	STRING  shift 48
	IF  shift 40
	WHILE  shift 41
	'-'  shift 39
	'!'  shift 38
	'{'  shift 44
	.  error

	expr  goto 145
	primary  goto 36
	boolean  goto 49

state 137
	var:  VAR OBJECTID ':' TYPEID '=' expr.    (14)
	expr:  expr.LE expr 
	expr:  expr.'<' expr 
	expr:  expr.EQ expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.MATCH '{' cases '}' 
	expr:  expr.'.' OBJECTID '(' actuals ')' 

	MATCH  shift 70
	LE  shift 63
	'<'  shift 64
	EQ  shift 65
	'+'  shift 68
	'-'  shift 69
	'*'  shift 66
	'/'  shift 67
	'.'  shift 71
	.  reduce 14 (src line 158)


state 138
	method:  DEF OBJECTID '(' formals ')' ':'.TYPEID '=' expr 
	method:  DEF OBJECTID '(' formals ')' ':'.TYPEID '=' NATIVE 

	TYPEID  shift 146
	.  error


state 139
	formals_nonempty:  formals_nonempty ',' formal.    (35)

	.  reduce 35 (src line 308)


state 140
	case:  CASE OBJECTID ':'.TYPEID ARROW block 

	TYPEID  shift 147
	.  error


state 141
	case:  CASE NULL ARROW.block 
	block: .    (22)

	VAR  shift 57
	SUPER  shift 42
	NEW  shift 43
	NULL  shift 46
	THIS  shift 50
	TRUE  shift 51
	FALSE  shift 52
	'('  shift 45
	OBJECTID  shift 37
	INTEGER  shift 47
	STRING  shift 48
	IF  shift 40
	WHILE  shift 41
	'-'  shift 39
	'!'  shift 38
	'{'  shift 44
	.  reduce 22 (src line 227)

	block  goto 148
	block_nonempty  goto 55
	expr  goto 56
	primary  goto 36
	boolean  goto 49

state 142
	expr:  expr '.' OBJECTID '(' actuals ')'.    (51)

	.  reduce 51 (src line 432)


state 143
	expr:  IF '(' expr ')' expr ELSE.expr 

	SUPER  shift 42
	NEW  shift 43
	NULL  shift 46
	THIS  shift 50
	TRUE  shift 51
	FALSE  shift 52
	'('  shift 45
	OBJECTID  shift 37
	INTEGER  shift 47
	STRING  shift 48
	IF  shift 40
	WHILE  shift 41
	'-'  shift 39
	'!'  shift 38
	'{'  shift 44
	.  error

	expr  goto 149
	primary  goto 36
	boolean  goto 49

state 144
	primary:  SUPER '.' OBJECTID '(' actuals ')'.    (53)

	.  reduce 53 (src line 453)


state 145
	block_nonempty:  VAR OBJECTID ':' TYPEID '=' expr.';' block_nonempty 
	expr:  expr.LE expr 
	expr:  expr.'<' expr 
	expr:  expr.EQ expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.MATCH '{' cases '}' 
	expr:  expr.'.' OBJECTID '(' actuals ')' 

	MATCH  shift 70
	LE  shift 63
	'<'  shift 64
	EQ  shift 65
	'+'  shift 68
	'-'  shift 69
	'*'  shift 66
	'/'  shift 67
	'.'  shift 71
	';'  shift 150
	.  error


state 146
	method:  DEF OBJECTID '(' formals ')' ':' TYPEID.'=' expr 
	method:  DEF OBJECTID '(' formals ')' ':' TYPEID.'=' NATIVE 

	'='  shift 151
	.  error


state 147
	case:  CASE OBJECTID ':' TYPEID.ARROW block 

	ARROW  shift 152
	.  error


state 148
	case:  CASE NULL ARROW block.    (69)

	.  reduce 69 (src line 566)


state 149
	expr:  IF '(' expr ')' expr ELSE expr.    (41)
	expr:  expr.LE expr 
	expr:  expr.'<' expr 
	expr:  expr.EQ expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.MATCH '{' cases '}' 
	expr:  expr.'.' OBJECTID '(' actuals ')' 

	MATCH  shift 70
	LE  shift 63
	'<'  shift 64
	EQ  shift 65
	'+'  shift 68
	'-'  shift 69
	'*'  shift 66
	'/'  shift 67
	'.'  shift 71
	.  reduce 41 (src line 348)


state 150
	block_nonempty:  VAR OBJECTID ':' TYPEID '=' expr ';'.block_nonempty 

	VAR  shift 57
	SUPER  shift 42
	NEW  shift 43
	NULL  shift 46
	THIS  shift 50
	TRUE  shift 51
	FALSE  shift 52
	'('  shift 45
	OBJECTID  shift 37
	INTEGER  shift 47
	STRING  shift 48
	IF  shift 40
	WHILE  shift 41
	'-'  shift 39
	'!'  shift 38
	'{'  shift 44
	.  error

	block_nonempty  goto 153
	expr  goto 56
	primary  goto 36
	boolean  goto 49

state 151
	method:  DEF OBJECTID '(' formals ')' ':' TYPEID '='.expr 
	method:  DEF OBJECTID '(' formals ')' ':' TYPEID '='.NATIVE 

	NATIVE  shift 155
	SUPER  shift 42
	NEW  shift 43
	NULL  shift 46
	THIS  shift 50
	TRUE  shift 51
	FALSE  shift 52
	'('  shift 45
	OBJECTID  shift 37
	INTEGER  shift 47
	STRING  shift 48
	IF  shift 40
	WHILE  shift 41
	'-'  shift 39
	'!'  shift 38
	'{'  shift 44
	.  error

	expr  goto 154
	primary  goto 36
	boolean  goto 49

state 152
	case:  CASE OBJECTID ':' TYPEID ARROW.block 
	block: .    (22)

	VAR  shift 57
	SUPER  shift 42
	NEW  shift 43
	NULL  shift 46
	THIS  shift 50
	TRUE  shift 51
	FALSE  shift 52
	'('  shift 45
	OBJECTID  shift 37
	INTEGER  shift 47
	STRING  shift 48
	IF  shift 40
	WHILE  shift 41
	'-'  shift 39
	'!'  shift 38
	'{'  shift 44
	.  reduce 22 (src line 227)

	block  goto 156
	block_nonempty  goto 55
	expr  goto 56
	primary  goto 36
	boolean  goto 49

state 153
	block_nonempty:  VAR OBJECTID ':' TYPEID '=' expr ';' block_nonempty.    (25)

	.  reduce 25 (src line 245)


state 154
	method:  DEF OBJECTID '(' formals ')' ':' TYPEID '=' expr.    (16)
	expr:  expr.LE expr 
	expr:  expr.'<' expr 
	expr:  expr.EQ expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.MATCH '{' cases '}' 
	expr:  expr.'.' OBJECTID '(' actuals ')' 

	MATCH  shift 70
	LE  shift 63
	'<'  shift 64
	EQ  shift 65
	'+'  shift 68
	'-'  shift 69
	'*'  shift 66
	'/'  shift 67
	'.'  shift 71
	.  reduce 16 (src line 182)


state 155
	method:  DEF OBJECTID '(' formals ')' ':' TYPEID '=' NATIVE.    (17)

	.  reduce 17 (src line 192)


state 156
	case:  CASE OBJECTID ':' TYPEID ARROW block.    (68)

	.  reduce 68 (src line 557)


43 terminals, 24 nonterminals
70 grammar rules, 157/2000 states
0 shift/reduce, 0 reduce/reduce conflicts reported
73 working sets used
memory: parser 161/30000
83 extra closures
693 shift entries, 1 exceptions
62 goto entries
72 entries saved by goto default
Optimizer space used: output 276/30000
276 table entries, 0 zero
maximum spread: 43, maximum offset: 152
